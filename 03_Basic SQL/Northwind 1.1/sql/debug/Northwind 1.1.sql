/*
Deployment script for Northwind 1.1

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Northwind 1.1"
:setvar DefaultFilePrefix "Northwind 1.1"
:setvar DefaultDataPath "C:\Users\Siarhei_Matveyenka\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\Siarhei_Matveyenka\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;
    END


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [Northwind]...';


GO
CREATE SCHEMA [Northwind]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [Northwind].[Orders]...';


GO
CREATE TABLE [Northwind].[Orders] (
    [OrderID]        INT           IDENTITY (1, 1) NOT NULL,
    [CustomerID]     NCHAR (5)     NULL,
    [EmployeeID]     INT           NULL,
    [OrderDate]      DATETIME      NULL,
    [RequiredDate]   DATETIME      NULL,
    [ShippedDate]    DATETIME      NULL,
    [ShipVia]        INT           NULL,
    [Freight]        MONEY         NULL,
    [ShipName]       NVARCHAR (40) NULL,
    [ShipAddress]    NVARCHAR (60) NULL,
    [ShipCity]       NVARCHAR (15) NULL,
    [ShipRegion]     NVARCHAR (15) NULL,
    [ShipPostalCode] NVARCHAR (10) NULL,
    [ShipCountry]    NVARCHAR (15) NULL,
    CONSTRAINT [PK_Orders] PRIMARY KEY CLUSTERED ([OrderID] ASC)
);


GO
PRINT N'Creating [Northwind].[Orders].[OrderDate]...';


GO
CREATE NONCLUSTERED INDEX [OrderDate]
    ON [Northwind].[Orders]([OrderDate] ASC);


GO
PRINT N'Creating [Northwind].[Orders].[EmployeesOrders]...';


GO
CREATE NONCLUSTERED INDEX [EmployeesOrders]
    ON [Northwind].[Orders]([EmployeeID] ASC);


GO
PRINT N'Creating [Northwind].[Orders].[EmployeeID]...';


GO
CREATE NONCLUSTERED INDEX [EmployeeID]
    ON [Northwind].[Orders]([EmployeeID] ASC);


GO
PRINT N'Creating [Northwind].[Orders].[CustomersOrders]...';


GO
CREATE NONCLUSTERED INDEX [CustomersOrders]
    ON [Northwind].[Orders]([CustomerID] ASC);


GO
PRINT N'Creating [Northwind].[Orders].[CustomerID]...';


GO
CREATE NONCLUSTERED INDEX [CustomerID]
    ON [Northwind].[Orders]([CustomerID] ASC);


GO
PRINT N'Creating [Northwind].[Orders].[ShipPostalCode]...';


GO
CREATE NONCLUSTERED INDEX [ShipPostalCode]
    ON [Northwind].[Orders]([ShipPostalCode] ASC);


GO
PRINT N'Creating [Northwind].[Orders].[ShippersOrders]...';


GO
CREATE NONCLUSTERED INDEX [ShippersOrders]
    ON [Northwind].[Orders]([ShipVia] ASC);


GO
PRINT N'Creating [Northwind].[Orders].[ShippedDate]...';


GO
CREATE NONCLUSTERED INDEX [ShippedDate]
    ON [Northwind].[Orders]([ShippedDate] ASC);


GO
PRINT N'Creating [Northwind].[Suppliers]...';


GO
CREATE TABLE [Northwind].[Suppliers] (
    [SupplierID]   INT           IDENTITY (1, 1) NOT NULL,
    [CompanyName]  NVARCHAR (40) NOT NULL,
    [ContactName]  NVARCHAR (30) NULL,
    [ContactTitle] NVARCHAR (30) NULL,
    [Address]      NVARCHAR (60) NULL,
    [City]         NVARCHAR (15) NULL,
    [Region]       NVARCHAR (15) NULL,
    [PostalCode]   NVARCHAR (10) NULL,
    [Country]      NVARCHAR (15) NULL,
    [Phone]        NVARCHAR (24) NULL,
    [Fax]          NVARCHAR (24) NULL,
    [HomePage]     NTEXT         NULL,
    CONSTRAINT [PK_Suppliers] PRIMARY KEY CLUSTERED ([SupplierID] ASC)
);


GO
PRINT N'Creating [Northwind].[Suppliers].[PostalCode]...';


GO
CREATE NONCLUSTERED INDEX [PostalCode]
    ON [Northwind].[Suppliers]([PostalCode] ASC);


GO
PRINT N'Creating [Northwind].[Suppliers].[CompanyName]...';


GO
CREATE NONCLUSTERED INDEX [CompanyName]
    ON [Northwind].[Suppliers]([CompanyName] ASC);


GO
PRINT N'Creating [Northwind].[Shippers]...';


GO
CREATE TABLE [Northwind].[Shippers] (
    [ShipperID]   INT           IDENTITY (1, 1) NOT NULL,
    [CompanyName] NVARCHAR (40) NOT NULL,
    [Phone]       NVARCHAR (24) NULL,
    CONSTRAINT [PK_Shippers] PRIMARY KEY CLUSTERED ([ShipperID] ASC)
);


GO
PRINT N'Creating [Northwind].[Customers]...';


GO
CREATE TABLE [Northwind].[Customers] (
    [CustomerID]   NCHAR (5)     NOT NULL,
    [CompanyName]  NVARCHAR (40) NOT NULL,
    [ContactName]  NVARCHAR (30) NULL,
    [ContactTitle] NVARCHAR (30) NULL,
    [Address]      NVARCHAR (60) NULL,
    [City]         NVARCHAR (15) NULL,
    [Region]       NVARCHAR (15) NULL,
    [PostalCode]   NVARCHAR (10) NULL,
    [Country]      NVARCHAR (15) NULL,
    [Phone]        NVARCHAR (24) NULL,
    [Fax]          NVARCHAR (24) NULL,
    CONSTRAINT [PK_Customers] PRIMARY KEY CLUSTERED ([CustomerID] ASC)
);


GO
PRINT N'Creating [Northwind].[Customers].[Region]...';


GO
CREATE NONCLUSTERED INDEX [Region]
    ON [Northwind].[Customers]([Region] ASC);


GO
PRINT N'Creating [Northwind].[Customers].[PostalCode]...';


GO
CREATE NONCLUSTERED INDEX [PostalCode]
    ON [Northwind].[Customers]([PostalCode] ASC);


GO
PRINT N'Creating [Northwind].[Customers].[CompanyName]...';


GO
CREATE NONCLUSTERED INDEX [CompanyName]
    ON [Northwind].[Customers]([CompanyName] ASC);


GO
PRINT N'Creating [Northwind].[Customers].[City]...';


GO
CREATE NONCLUSTERED INDEX [City]
    ON [Northwind].[Customers]([City] ASC);


GO
PRINT N'Creating [Northwind].[Categories]...';


GO
CREATE TABLE [Northwind].[Categories] (
    [CategoryID]   INT           IDENTITY (1, 1) NOT NULL,
    [CategoryName] NVARCHAR (15) NOT NULL,
    [Description]  NTEXT         NULL,
    [Picture]      IMAGE         NULL,
    CONSTRAINT [PK_Categories] PRIMARY KEY CLUSTERED ([CategoryID] ASC)
);


GO
PRINT N'Creating [Northwind].[Categories].[CategoryName]...';


GO
CREATE NONCLUSTERED INDEX [CategoryName]
    ON [Northwind].[Categories]([CategoryName] ASC);


GO
PRINT N'Creating [Northwind].[Employees]...';


GO
CREATE TABLE [Northwind].[Employees] (
    [EmployeeID]      INT            IDENTITY (1, 1) NOT NULL,
    [LastName]        NVARCHAR (20)  NOT NULL,
    [FirstName]       NVARCHAR (10)  NOT NULL,
    [Title]           NVARCHAR (30)  NULL,
    [TitleOfCourtesy] NVARCHAR (25)  NULL,
    [BirthDate]       DATETIME       NULL,
    [HireDate]        DATETIME       NULL,
    [Address]         NVARCHAR (60)  NULL,
    [City]            NVARCHAR (15)  NULL,
    [Region]          NVARCHAR (15)  NULL,
    [PostalCode]      NVARCHAR (10)  NULL,
    [Country]         NVARCHAR (15)  NULL,
    [HomePhone]       NVARCHAR (24)  NULL,
    [Extension]       NVARCHAR (4)   NULL,
    [Photo]           IMAGE          NULL,
    [Notes]           NTEXT          NULL,
    [ReportsTo]       INT            NULL,
    [PhotoPath]       NVARCHAR (255) NULL,
    CONSTRAINT [PK_Employees] PRIMARY KEY CLUSTERED ([EmployeeID] ASC)
);


GO
PRINT N'Creating [Northwind].[Employees].[PostalCode]...';


GO
CREATE NONCLUSTERED INDEX [PostalCode]
    ON [Northwind].[Employees]([PostalCode] ASC);


GO
PRINT N'Creating [Northwind].[Employees].[LastName]...';


GO
CREATE NONCLUSTERED INDEX [LastName]
    ON [Northwind].[Employees]([LastName] ASC);


GO
PRINT N'Creating [Northwind].[Region]...';


GO
CREATE TABLE [Northwind].[Region] (
    [RegionID]          INT        NOT NULL,
    [RegionDescription] NCHAR (50) NOT NULL,
    CONSTRAINT [PK_Region] PRIMARY KEY CLUSTERED ([RegionID] ASC)
);


GO
PRINT N'Creating [Northwind].[CustomerDemographics]...';


GO
CREATE TABLE [Northwind].[CustomerDemographics] (
    [CustomerTypeID] NCHAR (10) NOT NULL,
    [CustomerDesc]   NTEXT      NULL,
    CONSTRAINT [PK_CustomerDemographics] PRIMARY KEY CLUSTERED ([CustomerTypeID] ASC)
);


GO
PRINT N'Creating [Northwind].[EmployeeTerritories]...';


GO
CREATE TABLE [Northwind].[EmployeeTerritories] (
    [EmployeeID]  INT           NOT NULL,
    [TerritoryID] NVARCHAR (20) NOT NULL,
    CONSTRAINT [PK_EmployeeTerritories] PRIMARY KEY CLUSTERED ([EmployeeID] ASC, [TerritoryID] ASC)
);


GO
PRINT N'Creating [Northwind].[Territories]...';


GO
CREATE TABLE [Northwind].[Territories] (
    [TerritoryID]          NVARCHAR (20) NOT NULL,
    [TerritoryDescription] NCHAR (50)    NOT NULL,
    [RegionID]             INT           NOT NULL,
    CONSTRAINT [PK_Territories] PRIMARY KEY CLUSTERED ([TerritoryID] ASC)
);


GO
PRINT N'Creating [Northwind].[CustomerCustomerDemo]...';


GO
CREATE TABLE [Northwind].[CustomerCustomerDemo] (
    [CustomerID]     NCHAR (5)  NOT NULL,
    [CustomerTypeID] NCHAR (10) NOT NULL,
    CONSTRAINT [PK_CustomerCustomerDemo] PRIMARY KEY CLUSTERED ([CustomerID] ASC, [CustomerTypeID] ASC)
);


GO
PRINT N'Creating [Northwind].[Order Details]...';


GO
CREATE TABLE [Northwind].[Order Details] (
    [OrderID]   INT      NOT NULL,
    [ProductID] INT      NOT NULL,
    [UnitPrice] MONEY    NOT NULL,
    [Quantity]  SMALLINT NOT NULL,
    [Discount]  REAL     NOT NULL,
    CONSTRAINT [PK_Order_Details] PRIMARY KEY CLUSTERED ([OrderID] ASC, [ProductID] ASC)
);


GO
PRINT N'Creating [Northwind].[Order Details].[ProductsOrder_Details]...';


GO
CREATE NONCLUSTERED INDEX [ProductsOrder_Details]
    ON [Northwind].[Order Details]([ProductID] ASC);


GO
PRINT N'Creating [Northwind].[Order Details].[ProductID]...';


GO
CREATE NONCLUSTERED INDEX [ProductID]
    ON [Northwind].[Order Details]([ProductID] ASC);


GO
PRINT N'Creating [Northwind].[Order Details].[OrdersOrder_Details]...';


GO
CREATE NONCLUSTERED INDEX [OrdersOrder_Details]
    ON [Northwind].[Order Details]([OrderID] ASC);


GO
PRINT N'Creating [Northwind].[Order Details].[OrderID]...';


GO
CREATE NONCLUSTERED INDEX [OrderID]
    ON [Northwind].[Order Details]([OrderID] ASC);


GO
PRINT N'Creating [Northwind].[Products]...';


GO
CREATE TABLE [Northwind].[Products] (
    [ProductID]       INT           IDENTITY (1, 1) NOT NULL,
    [ProductName]     NVARCHAR (40) NOT NULL,
    [SupplierID]      INT           NULL,
    [CategoryID]      INT           NULL,
    [QuantityPerUnit] NVARCHAR (20) NULL,
    [UnitPrice]       MONEY         NULL,
    [UnitsInStock]    SMALLINT      NULL,
    [UnitsOnOrder]    SMALLINT      NULL,
    [ReorderLevel]    SMALLINT      NULL,
    [Discontinued]    BIT           NOT NULL,
    CONSTRAINT [PK_Products] PRIMARY KEY CLUSTERED ([ProductID] ASC)
);


GO
PRINT N'Creating [Northwind].[Products].[SuppliersProducts]...';


GO
CREATE NONCLUSTERED INDEX [SuppliersProducts]
    ON [Northwind].[Products]([SupplierID] ASC);


GO
PRINT N'Creating [Northwind].[Products].[SupplierID]...';


GO
CREATE NONCLUSTERED INDEX [SupplierID]
    ON [Northwind].[Products]([SupplierID] ASC);


GO
PRINT N'Creating [Northwind].[Products].[ProductName]...';


GO
CREATE NONCLUSTERED INDEX [ProductName]
    ON [Northwind].[Products]([ProductName] ASC);


GO
PRINT N'Creating [Northwind].[Products].[CategoryID]...';


GO
CREATE NONCLUSTERED INDEX [CategoryID]
    ON [Northwind].[Products]([CategoryID] ASC);


GO
PRINT N'Creating [Northwind].[Products].[CategoriesProducts]...';


GO
CREATE NONCLUSTERED INDEX [CategoriesProducts]
    ON [Northwind].[Products]([CategoryID] ASC);


GO
PRINT N'Creating [Northwind].[CreditCards]...';


GO
CREATE TABLE [Northwind].[CreditCards] (
    [CreditCardId] INT           IDENTITY (1, 1) NOT NULL,
    [Number]       INT           NOT NULL,
    [ExpiryDate]   DATETIME      NOT NULL,
    [CardHolder]   NVARCHAR (50) NOT NULL,
    [EmployeeID]   INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([CreditCardId] ASC)
);


GO
PRINT N'Creating [Northwind].[DF_Orders_Freight]...';


GO
ALTER TABLE [Northwind].[Orders]
    ADD CONSTRAINT [DF_Orders_Freight] DEFAULT ((0)) FOR [Freight];


GO
PRINT N'Creating [Northwind].[DF_Order_Details_UnitPrice]...';


GO
ALTER TABLE [Northwind].[Order Details]
    ADD CONSTRAINT [DF_Order_Details_UnitPrice] DEFAULT ((0)) FOR [UnitPrice];


GO
PRINT N'Creating [Northwind].[DF_Order_Details_Discount]...';


GO
ALTER TABLE [Northwind].[Order Details]
    ADD CONSTRAINT [DF_Order_Details_Discount] DEFAULT ((0)) FOR [Discount];


GO
PRINT N'Creating [Northwind].[DF_Order_Details_Quantity]...';


GO
ALTER TABLE [Northwind].[Order Details]
    ADD CONSTRAINT [DF_Order_Details_Quantity] DEFAULT ((1)) FOR [Quantity];


GO
PRINT N'Creating [Northwind].[DF_Products_Discontinued]...';


GO
ALTER TABLE [Northwind].[Products]
    ADD CONSTRAINT [DF_Products_Discontinued] DEFAULT ((0)) FOR [Discontinued];


GO
PRINT N'Creating [Northwind].[DF_Products_ReorderLevel]...';


GO
ALTER TABLE [Northwind].[Products]
    ADD CONSTRAINT [DF_Products_ReorderLevel] DEFAULT ((0)) FOR [ReorderLevel];


GO
PRINT N'Creating [Northwind].[DF_Products_UnitPrice]...';


GO
ALTER TABLE [Northwind].[Products]
    ADD CONSTRAINT [DF_Products_UnitPrice] DEFAULT ((0)) FOR [UnitPrice];


GO
PRINT N'Creating [Northwind].[DF_Products_UnitsInStock]...';


GO
ALTER TABLE [Northwind].[Products]
    ADD CONSTRAINT [DF_Products_UnitsInStock] DEFAULT ((0)) FOR [UnitsInStock];


GO
PRINT N'Creating [Northwind].[DF_Products_UnitsOnOrder]...';


GO
ALTER TABLE [Northwind].[Products]
    ADD CONSTRAINT [DF_Products_UnitsOnOrder] DEFAULT ((0)) FOR [UnitsOnOrder];


GO
PRINT N'Creating [Northwind].[FK_Orders_Customers]...';


GO
ALTER TABLE [Northwind].[Orders]
    ADD CONSTRAINT [FK_Orders_Customers] FOREIGN KEY ([CustomerID]) REFERENCES [Northwind].[Customers] ([CustomerID]);


GO
PRINT N'Creating [Northwind].[FK_Orders_Employees]...';


GO
ALTER TABLE [Northwind].[Orders]
    ADD CONSTRAINT [FK_Orders_Employees] FOREIGN KEY ([EmployeeID]) REFERENCES [Northwind].[Employees] ([EmployeeID]);


GO
PRINT N'Creating [Northwind].[FK_Orders_Shippers]...';


GO
ALTER TABLE [Northwind].[Orders]
    ADD CONSTRAINT [FK_Orders_Shippers] FOREIGN KEY ([ShipVia]) REFERENCES [Northwind].[Shippers] ([ShipperID]);


GO
PRINT N'Creating [Northwind].[FK_Employees_Employees]...';


GO
ALTER TABLE [Northwind].[Employees]
    ADD CONSTRAINT [FK_Employees_Employees] FOREIGN KEY ([ReportsTo]) REFERENCES [Northwind].[Employees] ([EmployeeID]);


GO
PRINT N'Creating [Northwind].[FK_EmployeeTerritories_Employees]...';


GO
ALTER TABLE [Northwind].[EmployeeTerritories]
    ADD CONSTRAINT [FK_EmployeeTerritories_Employees] FOREIGN KEY ([EmployeeID]) REFERENCES [Northwind].[Employees] ([EmployeeID]);


GO
PRINT N'Creating [Northwind].[FK_EmployeeTerritories_Territories]...';


GO
ALTER TABLE [Northwind].[EmployeeTerritories]
    ADD CONSTRAINT [FK_EmployeeTerritories_Territories] FOREIGN KEY ([TerritoryID]) REFERENCES [Northwind].[Territories] ([TerritoryID]);


GO
PRINT N'Creating [Northwind].[FK_Territories_Region]...';


GO
ALTER TABLE [Northwind].[Territories]
    ADD CONSTRAINT [FK_Territories_Region] FOREIGN KEY ([RegionID]) REFERENCES [Northwind].[Region] ([RegionID]);


GO
PRINT N'Creating [Northwind].[FK_CustomerCustomerDemo]...';


GO
ALTER TABLE [Northwind].[CustomerCustomerDemo]
    ADD CONSTRAINT [FK_CustomerCustomerDemo] FOREIGN KEY ([CustomerTypeID]) REFERENCES [Northwind].[CustomerDemographics] ([CustomerTypeID]);


GO
PRINT N'Creating [Northwind].[FK_CustomerCustomerDemo_Customers]...';


GO
ALTER TABLE [Northwind].[CustomerCustomerDemo]
    ADD CONSTRAINT [FK_CustomerCustomerDemo_Customers] FOREIGN KEY ([CustomerID]) REFERENCES [Northwind].[Customers] ([CustomerID]);


GO
PRINT N'Creating [Northwind].[FK_Order_Details_Orders]...';


GO
ALTER TABLE [Northwind].[Order Details]
    ADD CONSTRAINT [FK_Order_Details_Orders] FOREIGN KEY ([OrderID]) REFERENCES [Northwind].[Orders] ([OrderID]);


GO
PRINT N'Creating [Northwind].[FK_Order_Details_Products]...';


GO
ALTER TABLE [Northwind].[Order Details]
    ADD CONSTRAINT [FK_Order_Details_Products] FOREIGN KEY ([ProductID]) REFERENCES [Northwind].[Products] ([ProductID]);


GO
PRINT N'Creating [Northwind].[FK_Products_Categories]...';


GO
ALTER TABLE [Northwind].[Products]
    ADD CONSTRAINT [FK_Products_Categories] FOREIGN KEY ([CategoryID]) REFERENCES [Northwind].[Categories] ([CategoryID]);


GO
PRINT N'Creating [Northwind].[FK_Products_Suppliers]...';


GO
ALTER TABLE [Northwind].[Products]
    ADD CONSTRAINT [FK_Products_Suppliers] FOREIGN KEY ([SupplierID]) REFERENCES [Northwind].[Suppliers] ([SupplierID]);


GO
PRINT N'Creating [Northwind].[FK_CreditCards_Employees]...';


GO
ALTER TABLE [Northwind].[CreditCards]
    ADD CONSTRAINT [FK_CreditCards_Employees] FOREIGN KEY ([EmployeeID]) REFERENCES [Northwind].[Employees] ([EmployeeID]);


GO
PRINT N'Creating [Northwind].[CK_Birthdate]...';


GO
ALTER TABLE [Northwind].[Employees]
    ADD CONSTRAINT [CK_Birthdate] CHECK ([BirthDate]<getdate());


GO
PRINT N'Creating [Northwind].[CK_Discount]...';


GO
ALTER TABLE [Northwind].[Order Details]
    ADD CONSTRAINT [CK_Discount] CHECK ([Discount]>=(0) AND [Discount]<=(1));


GO
PRINT N'Creating [Northwind].[CK_Quantity]...';


GO
ALTER TABLE [Northwind].[Order Details]
    ADD CONSTRAINT [CK_Quantity] CHECK ([Quantity]>(0));


GO
PRINT N'Creating [Northwind].[CK_UnitPrice]...';


GO
ALTER TABLE [Northwind].[Order Details]
    ADD CONSTRAINT [CK_UnitPrice] CHECK ([UnitPrice]>=(0));


GO
PRINT N'Creating [Northwind].[CK_Products_UnitPrice]...';


GO
ALTER TABLE [Northwind].[Products]
    ADD CONSTRAINT [CK_Products_UnitPrice] CHECK ([UnitPrice]>=(0));


GO
PRINT N'Creating [Northwind].[CK_ReorderLevel]...';


GO
ALTER TABLE [Northwind].[Products]
    ADD CONSTRAINT [CK_ReorderLevel] CHECK ([ReorderLevel]>=(0));


GO
PRINT N'Creating [Northwind].[CK_UnitsInStock]...';


GO
ALTER TABLE [Northwind].[Products]
    ADD CONSTRAINT [CK_UnitsInStock] CHECK ([UnitsInStock]>=(0));


GO
PRINT N'Creating [Northwind].[CK_UnitsOnOrder]...';


GO
ALTER TABLE [Northwind].[Products]
    ADD CONSTRAINT [CK_UnitsOnOrder] CHECK ([UnitsOnOrder]>=(0));


GO
PRINT N'Creating [Northwind].[Product Sales for 1997]...';


GO
create view [Northwind].[Product Sales for 1997] AS
SELECT Categories.CategoryName, Products.ProductName, 
Sum(CONVERT(money,("Order Details".UnitPrice*Quantity*(1-Discount)/100))*100) AS ProductSales
FROM ([Northwind].Categories INNER JOIN [Northwind].Products ON Categories.CategoryID = Products.CategoryID) 
	INNER JOIN ([Northwind].Orders 
		INNER JOIN [Northwind]."Order Details" ON Orders.OrderID = "Order Details".OrderID) 
	ON Products.ProductID = "Order Details".ProductID
WHERE (((Orders.ShippedDate) Between '19970101' And '19971231'))
GROUP BY Categories.CategoryName, Products.ProductName
GO
PRINT N'Creating [Northwind].[Invoices]...';


GO
create view [Northwind].[Invoices] AS
SELECT Orders.ShipName, Orders.ShipAddress, Orders.ShipCity, Orders.ShipRegion, Orders.ShipPostalCode, 
	Orders.ShipCountry, Orders.CustomerID, Customers.CompanyName AS CustomerName, Customers.Address, Customers.City, 
	Customers.Region, Customers.PostalCode, Customers.Country, 
	(FirstName + ' ' + LastName) AS Salesperson, 
	Orders.OrderID, Orders.OrderDate, Orders.RequiredDate, Orders.ShippedDate, Shippers.CompanyName As ShipperName, 
	"Order Details".ProductID, Products.ProductName, "Order Details".UnitPrice, "Order Details".Quantity, 
	"Order Details".Discount, 
	(CONVERT(money,("Order Details".UnitPrice*Quantity*(1-Discount)/100))*100) AS ExtendedPrice, Orders.Freight
FROM 	[Northwind].Shippers INNER JOIN 
		([Northwind].Products INNER JOIN 
			(
				([Northwind].Employees INNER JOIN 
					([Northwind].Customers INNER JOIN [Northwind].Orders ON Customers.CustomerID = Orders.CustomerID) 
				ON Employees.EmployeeID = Orders.EmployeeID) 
			INNER JOIN [Northwind]."Order Details" ON Orders.OrderID = "Order Details".OrderID) 
		ON Products.ProductID = "Order Details".ProductID) 
	ON Shippers.ShipperID = Orders.ShipVia
GO
PRINT N'Creating [Northwind].[Quarterly Orders]...';


GO
create view [Northwind].[Quarterly Orders] AS
SELECT DISTINCT Customers.CustomerID, Customers.CompanyName, Customers.City, Customers.Country
FROM [Northwind].Customers RIGHT JOIN [Northwind].Orders ON Customers.CustomerID = Orders.CustomerID
WHERE Orders.OrderDate BETWEEN '19970101' And '19971231'
GO
PRINT N'Creating [Northwind].[Orders Qry]...';


GO
create view [Northwind].[Orders Qry] AS
SELECT Orders.OrderID, Orders.CustomerID, Orders.EmployeeID, Orders.OrderDate, Orders.RequiredDate, 
	Orders.ShippedDate, Orders.ShipVia, Orders.Freight, Orders.ShipName, Orders.ShipAddress, Orders.ShipCity, 
	Orders.ShipRegion, Orders.ShipPostalCode, Orders.ShipCountry, 
	Customers.CompanyName, Customers.Address, Customers.City, Customers.Region, Customers.PostalCode, Customers.Country
FROM [Northwind].Customers INNER JOIN [Northwind].Orders ON Customers.CustomerID = Orders.CustomerID
GO
PRINT N'Creating [Northwind].[Order Details Extended]...';


GO
create view [Northwind].[Order Details Extended] AS
SELECT "Order Details".OrderID, "Order Details".ProductID, Products.ProductName, 
	"Order Details".UnitPrice, "Order Details".Quantity, "Order Details".Discount, 
	(CONVERT(money,("Order Details".UnitPrice*Quantity*(1-Discount)/100))*100) AS ExtendedPrice
FROM [Northwind].Products INNER JOIN [Northwind]."Order Details" ON Products.ProductID = "Order Details".ProductID
--ORDER BY "Order Details".OrderID
GO
PRINT N'Creating [Northwind].[Current Product List]...';


GO
create view [Northwind].[Current Product List] AS
SELECT Product_List.ProductID, Product_List.ProductName
FROM [Northwind].Products AS Product_List
WHERE (((Product_List.Discontinued)=0))
GO
PRINT N'Creating [Northwind].[Products by Category]...';


GO
create view [Northwind].[Products by Category] AS
SELECT Categories.CategoryName, Products.ProductName, Products.QuantityPerUnit, Products.UnitsInStock, Products.Discontinued
FROM [Northwind].Categories INNER JOIN [Northwind].Products ON Categories.CategoryID = Products.CategoryID
WHERE Products.Discontinued <> 1
--ORDER BY Categories.CategoryName, Products.ProductName
GO
PRINT N'Creating [Northwind].[Sales by Category]...';


GO
create view [Northwind].[Sales by Category] AS
SELECT Categories.CategoryID, Categories.CategoryName, Products.ProductName, 
	Sum("Order Details Extended".ExtendedPrice) AS ProductSales
FROM 	[Northwind].Categories INNER JOIN 
		([Northwind].Products INNER JOIN 
			([Northwind].Orders INNER JOIN [Northwind]."Order Details Extended" ON Orders.OrderID = "Order Details Extended".OrderID) 
		ON Products.ProductID = "Order Details Extended".ProductID) 
	ON Categories.CategoryID = Products.CategoryID
WHERE Orders.OrderDate BETWEEN '19970101' And '19971231'
GROUP BY Categories.CategoryID, Categories.CategoryName, Products.ProductName
--ORDER BY Products.ProductName
GO
PRINT N'Creating [Northwind].[Alphabetical list of products]...';


GO
create view [Northwind].[Alphabetical list of products] AS
SELECT Products.*, Categories.CategoryName
FROM [Northwind].Categories INNER JOIN [Northwind].Products ON Categories.CategoryID = Products.CategoryID
WHERE (((Products.Discontinued)=0))
GO
PRINT N'Creating [Northwind].[Category Sales for 1997]...';


GO
create view [Northwind].[Category Sales for 1997] AS
SELECT "Product Sales for 1997".CategoryName, Sum("Product Sales for 1997".ProductSales) AS CategorySales
FROM [Northwind]."Product Sales for 1997"
GROUP BY "Product Sales for 1997".CategoryName
GO
PRINT N'Creating [Northwind].[Customer and Suppliers by City]...';


GO
create view [Northwind].[Customer and Suppliers by City] AS
SELECT City, CompanyName, ContactName, 'Customers' AS Relationship 
FROM [Northwind].Customers
UNION SELECT City, CompanyName, ContactName, 'Suppliers'
FROM [Northwind].Suppliers
--ORDER BY City, CompanyName
GO
PRINT N'Creating [Northwind].[Order Subtotals]...';


GO
create view [Northwind].[Order Subtotals] AS
SELECT "Order Details".OrderID, Sum(CONVERT(money,("Order Details".UnitPrice*Quantity*(1-Discount)/100))*100) AS Subtotal
FROM [Northwind]."Order Details"
GROUP BY "Order Details".OrderID
GO
PRINT N'Creating [Northwind].[Products Above Average Price]...';


GO
create view [Northwind].[Products Above Average Price] AS
SELECT Products.ProductName, Products.UnitPrice
FROM [Northwind].Products
WHERE Products.UnitPrice>(SELECT AVG(UnitPrice) From [Northwind].Products)
--ORDER BY Products.UnitPrice DESC
GO
PRINT N'Creating [Northwind].[Sales Totals by Amount]...';


GO
create view [Northwind].[Sales Totals by Amount] AS
SELECT "Order Subtotals".Subtotal AS SaleAmount, Orders.OrderID, Customers.CompanyName, Orders.ShippedDate
FROM 	[Northwind].Customers INNER JOIN 
		([Northwind].Orders INNER JOIN [Northwind]."Order Subtotals" ON Orders.OrderID = "Order Subtotals".OrderID) 
	ON Customers.CustomerID = Orders.CustomerID
WHERE ("Order Subtotals".Subtotal >2500) AND (Orders.ShippedDate BETWEEN '19970101' And '19971231')
GO
PRINT N'Creating [Northwind].[Summary of Sales by Quarter]...';


GO
create view [Northwind].[Summary of Sales by Quarter] AS
SELECT Orders.ShippedDate, Orders.OrderID, "Order Subtotals".Subtotal
FROM [Northwind].Orders INNER JOIN [Northwind]."Order Subtotals" ON Orders.OrderID = "Order Subtotals".OrderID
WHERE Orders.ShippedDate IS NOT NULL
--ORDER BY Orders.ShippedDate
GO
PRINT N'Creating [Northwind].[Summary of Sales by Year]...';


GO
create view [Northwind].[Summary of Sales by Year] AS
SELECT Orders.ShippedDate, Orders.OrderID, "Order Subtotals".Subtotal
FROM [Northwind].Orders INNER JOIN [Northwind]."Order Subtotals" ON Orders.OrderID = "Order Subtotals".OrderID
WHERE Orders.ShippedDate IS NOT NULL
--ORDER BY Orders.ShippedDate
GO
PRINT N'Creating [Northwind].[Ten Most Expensive Products]...';


GO
create procedure [Northwind].[Ten Most Expensive Products] AS
SET ROWCOUNT 10
SELECT Products.ProductName AS TenMostExpensiveProducts, Products.UnitPrice
FROM [Northwind].Products
ORDER BY Products.UnitPrice DESC
GO
PRINT N'Creating [Northwind].[CustOrdersDetail]...';


GO
CREATE PROCEDURE [Northwind].[CustOrdersDetail] @OrderID int
AS
SELECT ProductName,
    UnitPrice=ROUND(Od.UnitPrice, 2),
    Quantity,
    Discount=CONVERT(int, Discount * 100), 
    ExtendedPrice=ROUND(CONVERT(money, Quantity * (1 - Discount) * Od.UnitPrice), 2)
FROM [Northwind].Products P, [Northwind].[Order Details] Od
WHERE Od.ProductID = P.ProductID and Od.OrderID = @OrderID
GO
PRINT N'Creating [Northwind].[CustOrderHist]...';


GO
CREATE PROCEDURE [Northwind].[CustOrderHist] @CustomerID nchar(5)
AS
SELECT ProductName, Total=SUM(Quantity)
FROM [Northwind].Products P, [Northwind].[Order Details] OD, [Northwind].Orders O, [Northwind].Customers C
WHERE C.CustomerID = @CustomerID
AND C.CustomerID = O.CustomerID AND O.OrderID = OD.OrderID AND OD.ProductID = P.ProductID
GROUP BY ProductName
GO
PRINT N'Creating [Northwind].[CustOrdersOrders]...';


GO
CREATE PROCEDURE [Northwind].[CustOrdersOrders] @CustomerID nchar(5)
AS
SELECT OrderID, 
	OrderDate,
	RequiredDate,
	ShippedDate
FROM [Northwind].Orders
WHERE CustomerID = @CustomerID
ORDER BY OrderID
GO
PRINT N'Creating [Northwind].[SalesByCategory]...';


GO
CREATE PROCEDURE [Northwind].[SalesByCategory]
    @CategoryName nvarchar(15), @OrdYear nvarchar(4) = '1998'
AS
IF @OrdYear != '1996' AND @OrdYear != '1997' AND @OrdYear != '1998' 
BEGIN
	SELECT @OrdYear = '1998'
END

SELECT ProductName,
	TotalPurchase=ROUND(SUM(CONVERT(decimal(14,2), OD.Quantity * (1-OD.Discount) * OD.UnitPrice)), 0)
FROM [Northwind].[Order Details] OD, [Northwind].Orders O, [Northwind].Products P, [Northwind].Categories C
WHERE OD.OrderID = O.OrderID 
	AND OD.ProductID = P.ProductID 
	AND P.CategoryID = C.CategoryID
	AND C.CategoryName = @CategoryName
	AND SUBSTRING(CONVERT(nvarchar(22), O.OrderDate, 111), 1, 4) = @OrdYear
GROUP BY ProductName
ORDER BY ProductName
GO
PRINT N'Creating [Northwind].[Employee Sales by Country]...';


GO
create procedure [Northwind].[Employee Sales by Country] 
@Beginning_Date DateTime, @Ending_Date DateTime AS
SELECT Employees.Country, Employees.LastName, Employees.FirstName, Orders.ShippedDate, Orders.OrderID, "Order Subtotals".Subtotal AS SaleAmount
FROM [Northwind].Employees INNER JOIN 
	([Northwind].Orders INNER JOIN [Northwind]."Order Subtotals" ON Orders.OrderID = "Order Subtotals".OrderID) 
	ON Employees.EmployeeID = Orders.EmployeeID
WHERE Orders.ShippedDate Between @Beginning_Date And @Ending_Date
GO
PRINT N'Creating [Northwind].[Sales by Year]...';


GO
create procedure [Northwind].[Sales by Year] 
	@Beginning_Date DateTime, @Ending_Date DateTime AS
SELECT Orders.ShippedDate, Orders.OrderID, "Order Subtotals".Subtotal, DATENAME(yy,ShippedDate) AS Year
FROM [Northwind].Orders INNER JOIN [Northwind]."Order Subtotals" ON Orders.OrderID = "Order Subtotals".OrderID
WHERE Orders.ShippedDate Between @Beginning_Date And @Ending_Date
GO
PRINT N'Creating [Northwind].[CustomErrorThrow]...';


GO
CREATE PROCEDURE [Northwind].[CustomErrorThrow]
AS
	DECLARE @msg nvarchar(2048); 
	SET @msg = 'Custom error: ' + 'first param';

	THROW 50001, @msg , 1;

RETURN 0
GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
